<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 11 15:49:38 KST 2016-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StaticsDAO">

 	<select id="selectConnectStatics" parameterType="map" resultType="StaticsConnectVO">
		<![CDATA[
		SELECT e.dt, COALESCE(f.visit_user_count, 0) AS visit_user_count , COALESCE(g.visit_count, 0) AS visit_count FROM (
		SELECT CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY dt
		FROM (SELECT 0 a
		UNION ALL SELECT 1
		UNION ALL SELECT 2
		UNION ALL SELECT 3
		) a
		, (SELECT 0 b
		UNION ALL SELECT 1
		UNION ALL SELECT 2
		UNION ALL SELECT 3
		UNION ALL SELECT 4
		UNION ALL SELECT 5
		UNION ALL SELECT 6
		UNION ALL SELECT 7
		UNION ALL SELECT 8
		UNION ALL SELECT 9
		) b
		, (SELECT 0 c
		UNION ALL SELECT 1
		UNION ALL SELECT 2
		UNION ALL SELECT 3
		UNION ALL SELECT 4
		UNION ALL SELECT 5
		UNION ALL SELECT 6
		UNION ALL SELECT 7
		UNION ALL SELECT 8
		UNION ALL SELECT 9
		) c
		, (SELECT #{year} y) d
		WHERE a*100 + b*10 + c < DayOfYear(CONCAT(y, '1231'))
        AND CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY BETWEEN CONVERT('${year}-${month}-1 00:00:00', DATETIME) AND  DATE_ADD(DATE_ADD(CONVERT('${year}-${month}-1 00:00:00', DATETIME), INTERVAL 1 MONTH),INTERVAL -1 DAY)
		) e LEFT OUTER JOIN
		(SELECT b.date_day, COUNT(b.date_day) AS visit_user_count
		FROM (
		SELECT
		REGISTER_ID
		,DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') AS date_day
		FROM TB_USER_LOG a
		GROUP  BY date_day, register_id
		) b
		GROUP BY b.date_day) f ON e.dt = f.date_day
		LEFT OUTER JOIN (
		SELECT b.date_day, COUNT(b.date_day) AS visit_count
		FROM (
		SELECT
		REGISTER_ID
		, DATE_FORMAT(REGIST_DTM, '%Y-%m-%d %H') AS date_hour
		, DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') AS date_day
		FROM TB_USER_LOG a
		GROUP  BY date_hour, register_id
		) b
		GROUP BY b.date_day) g  ON e.dt = g.date_day
		ORDER BY e.dt
		]]>
 	</select>

 	<select id="selectQnaStatics" parameterType="map" resultType="StaticsQnaVO">
		<![CDATA[
			SELECT e.dt, COALESCE(f.question_Count, 0) AS question_Count , COALESCE(g.answer_Count, 0) AS answer_Count FROM (
			SELECT CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY dt
                  FROM (SELECT 0 a
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                        ) a
                     , (SELECT 0 b
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                        UNION ALL SELECT 4
                        UNION ALL SELECT 5
                        UNION ALL SELECT 6
                        UNION ALL SELECT 7
                        UNION ALL SELECT 8
                        UNION ALL SELECT 9
                        ) b
                     , (SELECT 0 c
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                        UNION ALL SELECT 4
                        UNION ALL SELECT 5
                        UNION ALL SELECT 6
                        UNION ALL SELECT 7
                        UNION ALL SELECT 8
                        UNION ALL SELECT 9
                        ) c
                     , (SELECT #{year} y) d
                 WHERE a*100 + b*10 + c < DayOfYear(CONCAT(y, '1231'))
                 AND CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY BETWEEN CONVERT('${year}-${month}-1 00:00:00', DATETIME) AND  DATE_ADD(DATE_ADD(CONVERT('${year}-${month}-1 00:00:00', DATETIME), INTERVAL 1 MONTH),INTERVAL -1 DAY)
                 ) e LEFT OUTER JOIN
                 ( SELECT DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') AS DATE_DAY , COUNT(*) AS QUESTION_COUNT FROM TB_QUESTION
						  GROUP  BY date_day) f ON e.dt = f.date_day
						LEFT OUTER JOIN (
						SELECT DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') AS DATE_DAY , COUNT(*) AS ANSWER_COUNT FROM TB_ANSWER
						GROUP  BY date_day) g  ON e.dt = g.date_day
						                 ORDER BY e.dt
		]]>
 	</select>
 	
 	<select id="selectKnowledgeStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		<![CDATA[
			SELECT
				e.DT, COALESCE(f.KNOWLEDGE_COUNT, 0) AS KNOWLEDGE_COUNT
			FROM (
				SELECT 
					CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY DT
				FROM (SELECT 0 a
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                     ) a
                     , (SELECT 0 b
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                        UNION ALL SELECT 4
                        UNION ALL SELECT 5
                        UNION ALL SELECT 6
                        UNION ALL SELECT 7
                        UNION ALL SELECT 8
                        UNION ALL SELECT 9
                     ) b
                     , (SELECT 0 c
                        UNION ALL SELECT 1
                        UNION ALL SELECT 2
                        UNION ALL SELECT 3
                        UNION ALL SELECT 4
                        UNION ALL SELECT 5
                        UNION ALL SELECT 6
                        UNION ALL SELECT 7
                        UNION ALL SELECT 8
                        UNION ALL SELECT 9
                     ) c
                     , (SELECT #{year} y) d
                 WHERE a*100 + b*10 + c < DayOfYear(CONCAT(y, '1231'))
                 AND CONCAT(y, '0101') + INTERVAL a*100 + b*10 + c DAY BETWEEN CONVERT('${year}-${month}-1 00:00:00', DATETIME) AND  DATE_ADD(DATE_ADD(CONVERT('${year}-${month}-1 00:00:00', DATETIME), INTERVAL 1 MONTH),INTERVAL -1 DAY)
                 ) e
                 LEFT OUTER JOIN
                 ( SELECT DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') AS DATE_DAY, COUNT(*) AS KNOWLEDGE_COUNT FROM TB_KNOWLEDGE GROUP BY DATE_DAY ) f
                 ON e.dt = f.DATE_DAY
                 ORDER BY e.dt
		]]>
 	</select>
 	
 	<select id="selectKnowledgeList" parameterType="KnowledgeVO" resultType="KnowledgeVO">
		SELECT *
		  FROM (SELECT tk.*
					 , (SELECT DISPLAY_NAME FROM TB_USER tu WHERE tu.SID = tk.REGISTER_ID) AS DISPLAY_NAME
					 , (SELECT OU FROM TB_ORG tg WHERE tg.OU_CODE = tk.OU_CODE) AS OU
					 , (SELECT COUNT(*) FROM TB_KNOWLEDGE_RECOMMEND tkr WHERE tkr.KNOWLG_NO = tk.KNOWLG_NO) AS RECOMMEND_CNT
				     , CASE WHEN DATEDIFF(tk.REGIST_DTM, SYSDATE()) > -4 THEN TRUE ELSE FALSE END AS IS_NEW
				  FROM TB_KNOWLEDGE tk) TB_KNOWLEDGE
		<where>
			AND KNOWLG_NO != 1
			<if test="searchKeyword != null and searchKeyword != ''">
				<if test="searchCondition == 'TITLE'">
					AND TITLE LIKE '%' #{searchKeyword} '%'
				</if>
				<if test="searchCondition == 'DISPLAY_NAME'">
					AND DISPLAY_NAME LIKE '%' #{searchKeyword} '%'
				</if>
				<if test="searchCondition == 'OU'">
					AND OU LIKE '%' #{searchKeyword} '%'
				</if>
			</if>
			<if test="searchStartDate != null and searchStartDate != ''">
				AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{searchStartDate}
			</if>
			<if test="searchEndDate != null and searchEndDate != ''">
				AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{searchEndDate}
			</if>
		</where>
		ORDER BY KNOWLG_NO DESC
       	LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
 	</select>
 	
 	<select id="selectKnowledgeListCount" resultType="int">
 		SELECT COUNT(KNOWLG_NO)
		  FROM (SELECT tk.*
					 , (SELECT DISPLAY_NAME FROM TB_USER tu WHERE tu.SID = tk.REGISTER_ID) AS DISPLAY_NAME
					 , (SELECT OU FROM TB_ORG tg WHERE tg.OU_CODE = tk.OU_CODE) AS OU
					 , (SELECT COUNT(*) FROM TB_KNOWLEDGE_RECOMMEND tkr WHERE tkr.KNOWLG_NO = tk.KNOWLG_NO) AS RECOMMEND_CNT
				  FROM TB_KNOWLEDGE tk) TB_KNOWLEDGE
		<where>
			AND KNOWLG_NO != 1
			<if test="searchKeyword != null and searchKeyword != ''">
				<if test="searchCondition == 'TITLE'">
					AND TITLE LIKE '%' #{searchKeyword} '%'
				</if>
				<if test="searchCondition == 'DISPLAY_NAME'">
					AND DISPLAY_NAME LIKE '%' #{searchKeyword} '%'
				</if>
				<if test="searchCondition == 'OU'">
					AND OU LIKE '%' #{searchKeyword} '%'
				</if>
			</if>
			<if test="searchStartDate != null and searchStartDate != ''">
				AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{searchStartDate}
			</if>
			<if test="searchEndDate != null and searchEndDate != ''">
				AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{searchEndDate}
			</if>
		</where>
 	</select>
 	
 	<select id="selectInterestsList" parameterType="KnowledgeVO" resultType="KnowledgeVO">

        	SELECT
        		ti.*,
        		(SELECT KNOWLG_MAP_TYPE FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = ti.KNOWLG_MAP_NO) AS KNOWLG_MAP_TYPE,
				(SELECT KNOWLG_MAP_NM FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = ti.KNOWLG_MAP_NO) AS KNOWLG_MAP_NM,
				(SELECT KNOWLG_MAP_NM FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = (SELECT UP_NO FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = ti.KNOWLG_MAP_NO)) AS UP_NM,
				(SELECT COUNT(*) FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = ti.KNOWLG_MAP_NO) AS INTERESTS_CNT
        	FROM
        		TB_INTERESTS ti
        	ORDER BY KNOWLG_MAP_TYPE, KNOWLG_MAP_NO
        	LIMIT #{itemCountPerPage} OFFSET #{itemOffset}

 	</select>
 	
 	<select id="selectInterestsListCount" resultType="int">

        	SELECT
        		COUNT(*)
        	FROM
        		TB_INTERESTS

 	</select>

	<select id="selectViewStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_KNOWLEDGE.TITLE
			 , TB_KNOWLEDGE.INQ_CNT
			 , TB_KNOWLEDGE.REC_CNT
			 , TB_KNOWLEDGE.REGIST_DTM
			 , TB_ORG.OU
			 , TB_USER.DISPLAY_NAME AS OWNER_NAME
			 , TB_USER.OU AS OWNER_OU
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
		  		<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
		 ORDER BY TB_KNOWLEDGE.INQ_CNT DESC, TB_KNOWLEDGE.REGIST_DTM DESC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectViewStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
	</select>

	<select id="selectRecommendStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_KNOWLEDGE.TITLE
			 , TB_KNOWLEDGE.INQ_CNT
			 , TB_KNOWLEDGE.REC_CNT
			 , TB_KNOWLEDGE.REGIST_DTM
			 , TB_ORG.OU
			 , TB_USER.DISPLAY_NAME AS OWNER_NAME
			 , TB_USER.OU AS OWNER_OU
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
		 ORDER BY TB_KNOWLEDGE.REC_CNT DESC, TB_KNOWLEDGE.REGIST_DTM DESC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectRecommendStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
	</select>

	<select id="selectUserStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER.DISPLAY_NAME
			 , TB_USER.OU
			 , IFNULL(TB_KNOWLEDGE.REG_CNT, 0) AS REG_CNT
			 , IFNULL(TB_KNOWLEDGE.INQ_CNT, 0) AS INQ_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
				     , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
				     , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
				     , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
		 ORDER BY TB_KNOWLEDGE.REG_CNT DESC, TB_USER.OU ASC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectUserStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
				     , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
				     , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
				     , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
	</select>

	<select id="selectRecommendUserStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER.DISPLAY_NAME
			 , TB_USER.OU
			 , IFNULL(TB_KNOWLEDGE.REG_CNT, 0) AS REG_CNT
			 , IFNULL(TB_KNOWLEDGE.INQ_CNT, 0) AS INQ_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
					 , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
		 ORDER BY TB_KNOWLEDGE.REC_CNT DESC, TB_USER.OU ASC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectRecommendUserStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
					 , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
	</select>

	<select id="selectActiveUserStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER_MILEAGE.*
			 , SUM(TB_USER_MILEAGE.NEW_MILEAGE + TB_USER_MILEAGE.UPD_MILEAGE + TB_USER_MILEAGE.REC_MILEAGE + TB_USER_MILEAGE.VIEW_MILEAGE) OVER (PARTITION BY TB_USER_MILEAGE.SID) AS TOTAL_MILEAGE
			 , TB_USER.DISPLAY_NAME
			 , TB_USER.OU
		  FROM (SELECT SID
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'NEW' THEN 1 END) AS NEW_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'UPD' THEN 1 END) AS UPD_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'REC' THEN 1 END) AS REC_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'VIEW' THEN 1 END) AS VIEW_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'NEW' THEN 1 END) * 2 AS NEW_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'UPD' THEN 1 END) * 1 AS UPD_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'REC' THEN 1 END) * 3 AS REC_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'VIEW' THEN 1 END) * 5 AS VIEW_MILEAGE
				  FROM TB_USER_MILEAGE
				 WHERE SID <![CDATA[<>]]> 'admin'
				   AND DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				 GROUP BY SID) TB_USER_MILEAGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_USER_MILEAGE.SID
		 ORDER BY TOTAL_MILEAGE DESC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectActiveUserStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
					 , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
	</select>

	<select id="selectOrgStatics" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_ORG.OU
			 , IFNULL(TB_KNOWLEDGE.REPORT_CNT, 0) AS REPORT_CNT
			 , IFNULL(TB_KNOWLEDGE.REFERENCE_CNT, 0) AS REFERENCE_CNT
			 , IFNULL(TB_KNOWLEDGE.PERSONAL_CNT, 0) AS PERSONAL_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
			 , IFNULL(TB_KNOWLEDGE.REPORT_CNT + TB_KNOWLEDGE.REFERENCE_CNT + TB_KNOWLEDGE.PERSONAL_CNT, 0) AS TOTAL
		  FROM (SELECT TB_KNOWLEDGE.OU_CODE
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REPORT' THEN 1 ELSE 0 END) AS REPORT_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REFERENCE' THEN 1 ELSE 0 END) AS REFERENCE_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'PERSONAL' THEN 1 ELSE 0 END) AS PERSONAL_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				 GROUP BY TB_KNOWLEDGE.OU_CODE) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		 ORDER BY TOTAL DESC, TB_ORG.OU ASC
		 LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
	</select>

	<select id="selectOrgStaticsCount" parameterType="StaticsKnowledgeVO" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT TB_KNOWLEDGE.OU_CODE
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REPORT' THEN 1 ELSE 0 END) AS REPORT_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REFERENCE' THEN 1 ELSE 0 END) AS REFERENCE_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'PERSONAL' THEN 1 ELSE 0 END) AS PERSONAL_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				 GROUP BY TB_KNOWLEDGE.OU_CODE) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
	</select>

	<select id="selectViewStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_KNOWLEDGE.TITLE
			 , TB_KNOWLEDGE.INQ_CNT
			 , TB_KNOWLEDGE.REC_CNT
			 , TB_KNOWLEDGE.REGIST_DTM
			 , TB_ORG.OU
			 , TB_USER.DISPLAY_NAME AS OWNER_NAME
			 , TB_USER.OU AS OWNER_OU
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
		  		<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
		 ORDER BY TB_KNOWLEDGE.INQ_CNT DESC, TB_KNOWLEDGE.REGIST_DTM DESC
	</select>

	<select id="selectRecommendStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_KNOWLEDGE.TITLE
			 , TB_KNOWLEDGE.INQ_CNT
			 , TB_KNOWLEDGE.REC_CNT
			 , TB_KNOWLEDGE.REGIST_DTM
			 , TB_ORG.OU
			 , TB_USER.DISPLAY_NAME AS OWNER_NAME
			 , TB_USER.OU AS OWNER_OU
		  FROM (SELECT TB_KNOWLEDGE.TITLE
					 , TB_KNOWLEDGE.OU_CODE
					 , TB_KNOWLEDGE.OWNER_ID
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , MAX(TB_KNOWLEDGE.REGIST_DTM) AS REGIST_DTM
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.TITLE, TB_KNOWLEDGE.OU_CODE, TB_KNOWLEDGE.OWNER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.OWNER_ID
		 ORDER BY TB_KNOWLEDGE.REC_CNT DESC, TB_KNOWLEDGE.REGIST_DTM DESC
	</select>

	<select id="selectUserStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER.DISPLAY_NAME
			 , TB_USER.OU
			 , IFNULL(TB_KNOWLEDGE.REG_CNT, 0) AS REG_CNT
			 , IFNULL(TB_KNOWLEDGE.INQ_CNT, 0) AS INQ_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
				     , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
				     , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
				     , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
		 ORDER BY TB_KNOWLEDGE.REG_CNT DESC, TB_USER.OU ASC
	</select>

	<select id="selectRecommendUserStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER.DISPLAY_NAME
			 , TB_USER.OU
			 , IFNULL(TB_KNOWLEDGE.REG_CNT, 0) AS REG_CNT
			 , IFNULL(TB_KNOWLEDGE.INQ_CNT, 0) AS INQ_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
		  FROM (SELECT TB_KNOWLEDGE.REGISTER_ID
					 , COUNT(TB_KNOWLEDGE.REGISTER_ID) AS REG_CNT
					 , SUM(TB_KNOWLEDGE.INQ_CNT) AS INQ_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				<if test="searchType != null and searchType != ''">
					AND TB_KNOWLEDGE.KNOWLG_MAP_TYPE = #{searchType}
				</if>
				 GROUP BY TB_KNOWLEDGE.REGISTER_ID) TB_KNOWLEDGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
		 WHERE TB_USER.DEL_YN = 'N'
		 ORDER BY TB_KNOWLEDGE.REC_CNT DESC, TB_USER.OU ASC
	</select>

	<select id="selectActiveUserStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_USER_MILEAGE.*
			 , SUM(TB_USER_MILEAGE.NEW_MILEAGE + TB_USER_MILEAGE.UPD_MILEAGE + TB_USER_MILEAGE.REC_MILEAGE + TB_USER_MILEAGE.VIEW_MILEAGE) OVER (PARTITION BY TB_USER_MILEAGE.SID) AS TOTAL_MILEAGE
			 , TB_USER.DISPLAY_NAME
			 , TB_USER.OU
		  FROM (SELECT SID
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'NEW' THEN 1 END) AS NEW_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'UPD' THEN 1 END) AS UPD_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'REC' THEN 1 END) AS REC_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'VIEW' THEN 1 END) AS VIEW_CNT
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'NEW' THEN 1 END) * 2 AS NEW_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'UPD' THEN 1 END) * 1 AS UPD_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'REC' THEN 1 END) * 3 AS REC_MILEAGE
					 , COUNT(CASE WHEN MILEAGE_TYPE = 'VIEW' THEN 1 END) * 5 AS VIEW_MILEAGE
				  FROM TB_USER_MILEAGE
				 WHERE SID <![CDATA[<>]]> 'admin'
				   AND DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				 GROUP BY SID) TB_USER_MILEAGE
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_USER_MILEAGE.SID
		 ORDER BY TOTAL_MILEAGE DESC
	</select>

	<select id="selectOrgStaticsExcelList" parameterType="StaticsKnowledgeVO" resultType="StaticsKnowledgeVO">
		SELECT TB_ORG.OU
			 , IFNULL(TB_KNOWLEDGE.REPORT_CNT, 0) AS REPORT_CNT
			 , IFNULL(TB_KNOWLEDGE.REFERENCE_CNT, 0) AS REFERENCE_CNT
			 , IFNULL(TB_KNOWLEDGE.PERSONAL_CNT, 0) AS PERSONAL_CNT
			 , IFNULL(TB_KNOWLEDGE.REC_CNT, 0) AS REC_CNT
			 , IFNULL(TB_KNOWLEDGE.REPORT_CNT + TB_KNOWLEDGE.REFERENCE_CNT + TB_KNOWLEDGE.PERSONAL_CNT, 0) AS TOTAL
		  FROM (SELECT TB_KNOWLEDGE.OU_CODE
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REPORT' THEN 1 ELSE 0 END) AS REPORT_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'REFERENCE' THEN 1 ELSE 0 END) AS REFERENCE_CNT
					 , SUM(CASE WHEN TB_KNOWLEDGE.KNOWLG_MAP_TYPE = 'PERSONAL' THEN 1 ELSE 0 END) AS PERSONAL_CNT
					 , SUM((SELECT COUNT(KNOWLG_NO) FROM TB_KNOWLEDGE_RECOMMEND WHERE KNOWLG_NO = TB_KNOWLEDGE.KNOWLG_NO)) AS REC_CNT
				  FROM TB_KNOWLEDGE
				  LEFT JOIN TB_KNOWLEDGE_MAP ON TB_KNOWLEDGE_MAP.KNOWLG_MAP_NO = TB_KNOWLEDGE.KNOWLG_MAP_NO
				  LEFT JOIN TB_USER ON TB_USER.SID = TB_KNOWLEDGE.REGISTER_ID
				 WHERE TB_KNOWLEDGE.DEL_YN = 'N'
				   AND TB_KNOWLEDGE.APRV_YN = 'Y'
				   AND TB_KNOWLEDGE_MAP.DEL_YN = 'N'
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[>=]]> #{startDate}
				   AND DATE_FORMAT(TB_KNOWLEDGE.REGIST_DTM, '%Y-%m-%d') <![CDATA[<=]]> #{endDate}
				 GROUP BY TB_KNOWLEDGE.OU_CODE) TB_KNOWLEDGE
		  LEFT JOIN TB_ORG ON TB_ORG.OU_CODE = TB_KNOWLEDGE.OU_CODE
		 ORDER BY TOTAL DESC, TB_ORG.OU ASC
	</select>
 	
</mapper>