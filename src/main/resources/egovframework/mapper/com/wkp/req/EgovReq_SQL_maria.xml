<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 11 15:49:38 KST 2016-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReqDAO">

    <sql id="selectListCondition">
        <where>
        	AND DEL_YN = 'N'
	        <if test="searchType != null and searchText != null and searchText != ''">
	            <if test="searchType == 'TITLE' ">
	                AND TITLE LIKE '%' #{searchText} '%'
	            </if>
	            <if test="searchType == 'REGISTER_ID'">
					AND REGISTER_ID  in (SELECT SID FROM TB_USER WHERE DISPLAY_NAME LIKE '%' #{searchText } '%')
	            </if>
	        </if>
        </where>
    </sql>

 	<select id="selectRequestList" parameterType="ReqVO" resultType="ReqVO">

			SELECT
				trk.*,
				(SELECT DISPLAY_NAME FROM TB_USER tu WHERE tu.SID = trk.REGISTER_ID) AS DISPLAY_NAME,
				CASE WHEN DATEDIFF(REGIST_DTM, SYSDATE()) > -4 THEN TRUE ELSE FALSE END AS IS_NEW,
				(SELECT CASE WHEN COUNT(1) = 1 THEN 'Y' WHEN COUNT(1) = 0 THEN 'N' ELSE '' END FROM TB_REQUEST_KNOWLEDGE_ANSWER WHERE REQUST_NO = trk.REQUST_NO AND SLCTN_YN = 'Y') AS SELECTION_YN
 			FROM
				TB_REQUEST_KNOWLEDGE trk
			<include refid="selectListCondition" />
        	ORDER BY REQUST_NO DESC
        	LIMIT #{itemCountPerPage} OFFSET #{itemOffset}
        	
 	</select>
 	
	<select id="selectRequestListCount" parameterType="ReqVO" resultType="int">
	
	        SELECT
	        	COUNT(*)
	        FROM 
	        	TB_REQUEST_KNOWLEDGE
	        <include refid="selectListCondition" />
	        
    </select>
    
	<select id="selectRequestListCountByMine" parameterType="ReqVO" resultType="int">
	
	        SELECT
	        	COUNT(*)
	        FROM 
	        	TB_REQUEST_KNOWLEDGE
	        <where>
        		AND DEL_YN = 'N'
	        	AND REGISTER_ID = #{registerId}
	        	AND ANSWER_YN = #{answerYn}
	        </where>
	        
    </select>
 	
 	<select id="selectRequestDetail" parameterType="ReqVO" resultType="ReqVO">
 		
			SELECT 
				trk.*,
				(SELECT DISPLAY_NAME FROM TB_USER tu WHERE tu.SID = trk.REGISTER_ID) AS DISPLAY_NAME,
				(SELECT OU FROM TB_ORG tr WHERE tr.OU_CODE = (SELECT OU_CODE FROM TB_USER tr WHERE tr.SID = trk.REGISTER_ID)) AS OU,
				(SELECT DISPLAY_NAME FROM TB_USER tu WHERE tu.SID = trk.ANSWER_ID) AS ANSWER_DISPLAY_NAME,
				(SELECT OU FROM TB_ORG tr WHERE tr.OU_CODE = (SELECT OU_CODE FROM TB_USER tr WHERE tr.SID = trk.ANSWER_ID)) AS ANSWER_OU,
				(SELECT KNOWLG_MAP_NM FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = trk.KNOWLG_MAP_NO) AS KNOWLG_MAP_NM,
				(SELECT KNOWLG_MAP_NM FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = (SELECT UP_NO FROM TB_KNOWLEDGE_MAP tkm WHERE tkm.KNOWLG_MAP_NO = trk.KNOWLG_MAP_NO)) AS UP_NM
			FROM
				TB_REQUEST_KNOWLEDGE trk
			WHERE 
				REQUST_NO = #{requstNo}
 		
 	</select>
 	
    <select id="selectRequestPre" parameterType="ReqVO" resultType="ReqVO">

        SELECT 
        	*
        FROM 
        	TB_REQUEST_KNOWLEDGE
        WHERE 
        	REQUST_NO IN (
            	SELECT * FROM (
                	(
                		SELECT REQUST_NO FROM TB_REQUEST_KNOWLEDGE
                		<include refid="selectListCondition" />
                		AND REQUST_NO > #{requstNo} ORDER BY REQUST_NO LIMIT 1
                	) as REQUST_NO
            	)
        	)

    </select>

    <select id="selectRequestNext" parameterType="ReqVO" resultType="ReqVO">
        
        SELECT 
        	*
        FROM 
        	TB_REQUEST_KNOWLEDGE
        WHERE 
        	REQUST_NO IN (
            	SELECT * FROM (
                	(
                    	SELECT REQUST_NO FROM TB_REQUEST_KNOWLEDGE
                    	<include refid="selectListCondition" />
                    	AND REQUST_NO <![CDATA[<]]> #{requstNo} ORDER BY REQUST_NO DESC LIMIT 1
                	) as REQUST_NO
            	)
        	)
        	
    </select>
 	
	<insert id="insertRequest" useGeneratedKeys="true" keyProperty="requstNo"  parameterType="ReqVO">
		
			INSERT INTO TB_REQUEST_KNOWLEDGE
			(KNOWLG_MAP_TYPE, KNOWLG_MAP_NO, TITLE, CONT, ATCH_FILE_NO, INQ_CNT, ANSWER_YN, REGISTER_ID, REGIST_DTM, UPDATER_ID, UPD_DTM, DEL_YN, ANON_YN)
			VALUES
			(#{knowlgMapType}, #{knowlgMapNo}, #{title}, #{cont}, #{atchFileNo}, 0, 'N', #{registerId}, SYSDATE(), #{registerId}, SYSDATE(), 'N', #{anonYn})
		
	</insert>
	
	<insert id="updateRequest" parameterType="ReqVO">
		
			UPDATE
				TB_REQUEST_KNOWLEDGE
			SET
				KNOWLG_MAP_TYPE = #{knowlgMapType},
				KNOWLG_MAP_NO = #{knowlgMapNo},
				TITLE = #{title},
				CONT = #{cont},
				ATCH_FILE_NO = #{atchFileNo},
				UPDATER_ID = #{registerId},
				UPD_DTM = SYSDATE(),
			    ANON_YN = #{anonYn}
			<where>
				AND REQUST_NO = #{requstNo}
			</where>		
		
	</insert>
	
	<insert id="deleteRequest" parameterType="ReqVO">
		
			UPDATE
				TB_REQUEST_KNOWLEDGE
			SET
				DEL_YN = 'Y'
			<where>
				AND REQUST_NO = #{requstNo}
			</where>		
		
	</insert>
	
	<update id="updateRequestInqCnt" parameterType="ReqVO">
		
			UPDATE
				TB_REQUEST_KNOWLEDGE
			SET
				INQ_CNT = INQ_CNT + 1
			<where>
				AND REQUST_NO = #{requstNo}
			</where>
	
	</update>

	<update id="updateRequestAnswer" parameterType="ReqVO">

			UPDATE
				TB_REQUEST_KNOWLEDGE_ANSWER
			SET
				CONT 		= #{answerCont},
				UPDATER_ID 	= #{answerId},
				UPD_DTM 	= SYSDATE()
			<where>
				AND REQUST_ANSWER_NO = #{requstAnswerNo}
			</where>

	</update>

	<insert id="insertRequestAnswer" parameterType="ReqVO">
		INSERT INTO TB_REQUEST_KNOWLEDGE_ANSWER (REQUST_NO, CONT, SLCTN_YN, REGISTER_ID, REGIST_DTM, DEL_YN)
		VALUES (#{requstNo}, #{cont}, 'N', #{registerId}, now(), 'N')
	</insert>

	<select id="selectAnswerList" parameterType="ReqVO" resultType="ReqVO">
		SELECT TB_REQUEST_KNOWLEDGE_ANSWER.REQUST_ANSWER_NO
			 , TB_REQUEST_KNOWLEDGE_ANSWER.REQUST_NO
			 , TB_REQUEST_KNOWLEDGE_ANSWER.CONT
			 , TB_REQUEST_KNOWLEDGE_ANSWER.SLCTN_YN
			 , TB_REQUEST_KNOWLEDGE_ANSWER.REGISTER_ID
			 , TB_REQUEST_KNOWLEDGE_ANSWER.REGIST_DTM
			 , TB_REQUEST_KNOWLEDGE_ANSWER.UPDATER_ID
			 , TB_REQUEST_KNOWLEDGE_ANSWER.UPD_DTM
			 , TB_REQUEST_KNOWLEDGE_ANSWER.DEL_YN
			 , TB_USER.DISPLAY_NAME
		  FROM TB_REQUEST_KNOWLEDGE_ANSWER
		  LEFT JOIN TB_USER ON TB_USER.SID = TB_REQUEST_KNOWLEDGE_ANSWER.REGISTER_ID
		 WHERE TB_REQUEST_KNOWLEDGE_ANSWER.DEL_YN = 'N'
		   AND TB_REQUEST_KNOWLEDGE_ANSWER.REQUST_NO = #{requstNo}
		 ORDER BY TB_REQUEST_KNOWLEDGE_ANSWER.REGIST_DTM DESC
	</select>

	<update id="updateAnswerSelection" parameterType="ReqVO">
		UPDATE TB_REQUEST_KNOWLEDGE_ANSWER
		   SET SLCTN_YN = 'Y'
			 , UPDATER_ID = #{updaterId}
			 , UPD_DTM = now()
		 WHERE REQUST_ANSWER_NO = #{requstAnswerNo}
	</update>



	<insert id="insertUserRequestMileage" parameterType="KnowledgeVO">

		INSERT INTO TB_USER_REQUEST_MILEAGE
			(MILEAGE_TYPE, KNOWLG_NO, MILEAGE_SCORE, SID, REGIST_DTM)
		VALUES
			(#{mileageType}, #{requestNo}, #{mileageScore}, #{registerId}, SYSDATE())

	</insert>

	<insert id="insertOrgRequestMileage" parameterType="KnowledgeVO">

		INSERT INTO TB_ORG_REQUEST_MILEAGE
			(MILEAGE_TYPE, KNOWLG_NO, MILEAGE_SCORE, OU_CODE, REGIST_DTM)
		VALUES
			(#{mileageType}, #{requestNo}, #{mileageScore}, #{ouCode}, SYSDATE())

	</insert>

	<delete id="deleteUserRequestMileage" parameterType="KnowledgeVO">

		DELETE
		FROM
		TB_USER_REQUEST_MILEAGE
		<where>
			AND KNOWLG_NO = #{requestNo}
			<if test="mileageType != null and mileageType !=''">
				AND MILEAGE_TYPE = #{mileageType}
			</if>
			<if test="registerId != null and registerId != ''">
				AND SID = #{registerId}
			</if>
		</where>

	</delete>

	<delete id="deleteOrgRequestMileage" parameterType="KnowledgeVO">

		DELETE
		FROM
		TB_ORG_REQUEST_MILEAGE
		<where>
			AND KNOWLG_NO = #{requestNo}
			<if test="mileageType != null and mileageType !=''">
				AND MILEAGE_TYPE = #{mileageType}
			</if>
			<if test="ouCode != null and ouCode != ''">
				AND OU_CODE = #{ouCode}
			</if>
		</where>

	</delete>
 	
</mapper>